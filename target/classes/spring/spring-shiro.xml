<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <property name="loginUrl" value="/"/>
        <property name="filters">
            <map>
                 <entry key="authz" value-ref="authorizationFilter"/>
                 <entry key="authc" value-ref="authenticationFilter"/>
                 <entry key="perms" value-ref="permissionFilter"/>
               <!-- <entry key="kickout" value-ref="kickoutSessionControlFilter"/>-->
            </map>
        </property>
        <property name="filterChainDefinitions">
            <value>
                /style/**=anon
                /jslib/**=anon
                /admin/login=anon
                /admin/logout=anon
                /admin/index=anon
                /oauth/**=anon
                /error/**=anon
                /**=authc,authz
            </value>
        </property>
    </bean>
    <!-- securityManager安全管理器 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realms">
            <list>
                <ref bean="shiroRealm"/>
            </list>
        </property>
        <!-- 注入缓存管理器 -->
        <property name="cacheManager" ref="cacheManager"/>
        <!-- 注入session管理器 -->
        <property name="sessionManager" ref="sessionManager"/>
        <!-- 记住我 -->
    </bean>
    <bean id="shiroRealm" class="com.ctl.sys.manger.shiro.ShiroRealm">
        <property name="credentialsMatcher" ref="credentialsMatcher"/>
    </bean>
    <!--
     kickoutSessionControlFilter 用于控制并发登录人数的
    <bean id="kickoutSessionControlFilter"  class="com.ctl.sys.manger.shiro.filter.KickoutSessionControlFilter">
        <property name="cacheManager" ref="cacheManager"/>
        <property name="sessionManager" ref="sessionManager"/>
        <property name="kickoutAfter" value="false"/>
        <property name="maxSession" value="1"/>
        <property name="kickoutUrl" value="kickout=1"/>
    </bean>
    -->
    <bean id="redisSessionDAO" class="com.ctl.sys.manger.shiro.RedisSessionDao"/>
    <bean id="cacheManager" class="com.ctl.sys.manger.shiro.RedisCacheManager">
        <property name="redisTemplate" ref="redisTemplate"/>
    </bean>

    <bean id="credentialsMatcher"
          class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
        <property name="hashAlgorithmName" value="md5"/>
        <property name="hashIterations" value="2"/>
    </bean>

    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <property name="globalSessionTimeout" value="60000"/><!--ms-->
        <property name="sessionValidationSchedulerEnabled" value="true"/>
        <property name="sessionDAO" ref="redisSessionDAO"/>
        <property name="deleteInvalidSessions" value="true"/>
        <property name="sessionIdCookieEnabled" value="true"/>
    </bean>

    <bean id="authorizationFilter" class="com.ctl.sys.manger.shiro.ShiroAuthorizationFilter"/>
    <bean id="authenticationFilter" class="com.ctl.sys.manger.shiro.ShiroAuthenticationFilter"/>
    <bean id="permissionFilter" class="com.ctl.sys.manger.shiro.filter.PermissionFilter"/>

    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"  depends-on="lifecycleBeanPostProcessor"/>
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>
    <!-- 控制器异常处理 -->
    <bean id="exceptionHandlerExceptionResolver" class="org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver">
    </bean>

    <bean class="com.ctl.sys.manger.shiro.exception.DefaultExceptionHandler"/>
    <bean id="shiroSessionListener" class="com.ctl.sys.manger.shiro.ShiroSessionListener"></bean>

</beans>